"""Init

Revision ID: 43cad9159d05
Revises: 0034bb61c946
Create Date: 2024-09-23 09:55:48.712007

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '43cad9159d05'
down_revision: Union[str, None] = '0034bb61c946'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('records', sa.Column('status', sa.Integer(), nullable=True))
    op.add_column('records', sa.Column('appointment_date', sa.Date(), nullable=False))
    op.add_column('records', sa.Column('date_regist', sa.Time(), nullable=False))
    op.drop_constraint('records_appointment_id_fkey', 'records', type_='foreignkey')
    op.drop_constraint('records_room_id_fkey', 'records', type_='foreignkey')
    op.create_foreign_key(None, 'records', 'status', ['status'], ['id'])
    op.drop_column('records', 'diagnosis')
    op.drop_column('records', 'created_at')
    op.drop_column('records', 'treatment')
    op.drop_column('records', 'appointment_id')
    op.drop_column('records', 'room_id')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('records', sa.Column('room_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('records', sa.Column('appointment_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('records', sa.Column('treatment', sa.TEXT(), autoincrement=False, nullable=False))
    op.add_column('records', sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.add_column('records', sa.Column('diagnosis', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'records', type_='foreignkey')
    op.create_foreign_key('records_room_id_fkey', 'records', 'rooms', ['room_id'], ['id'])
    op.create_foreign_key('records_appointment_id_fkey', 'records', 'appointments', ['appointment_id'], ['id'])
    op.drop_column('records', 'date_regist')
    op.drop_column('records', 'appointment_date')
    op.drop_column('records', 'status')
    # ### end Alembic commands ###
